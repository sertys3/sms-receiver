#
# /etc/smsd.conf
#

# List of names of your modems, maximum 64 devices. This limit is changeable. After
# version >= 3.1.12 this setting can be given in shortened form: devices = GSM* 101-164 . "GSM"
# defines a prefix, "101" is the number of first modem and "164" is the number of last modem. The
# example is extracted to: devices = GSM101,GSM102,GSM103 etc...
devices = Port* 1-8
#devices = Port1

# Path of the Outgoing Queue folder.
outgoing = /var/spool/sms/outgoing

# Path of the default Queue directory in case you do not use provider-sorting.
checked = /var/spool/sms/checked

# Path of the Incoming Folder.
incoming = /var/spool/sms/incoming

# Path of the Failed Folder. Delete this line if you do not want to keep failed files.
failed = /var/spool/sms/failed

# Path of the Sent Folder. Delete this line, if you do not want to keep copies of each sent message
# file.
sent = /var/spool/sms/sent

# Name of the blacklist and whitelist files. The black list takes precedence before the white list.
# See http://smstools3.kekekasvi.com/index.php?p=blacklist for more details and sample usage.
#blacklist = /etc/smstools/blacklist
#whitelist = /etc/smstools/whitelist

# Available from version >= 3.0.9. With this setting messages using ISO or GSM alphabet are stored
# using UTF-8 character set.
incoming_utf8 = yes

# Name of the log file. Delete this line, if you want to use the syslog for logging. You can use
# "1" to write to the console (stdout). This setting can be overridden by the -l (ell) command line
# argument.
#logfile = /var/log/smstools/smsd.log

# Sets the verbosity of a log file. This affects also syslog. If you want all messages in syslog,
# you need to set it to "7" (or higher) here and "*" in the config file of syslog. If you want less
# messages, you can reduce it here or in the config file of syslog, both will work.
#
#       debug    7  All AT-Commands and modem answers and other detailed informations useful for
#                 debugging
#       info     6  Information what is going on at the moment. Not detailled enough for debugging but
#                 maybe interesting.
#       notice   5  Information when a message was received or sent and when something not normal
#                 happens but program still works fine (for example wrong destination number in SMS
#                 file).
#       warning  4  Warning when the program has a problem sending a single short message.
#       error    3  Error message when the program has temporary problem (for example modem answered
#                 with ERROR during initialization or a file can not be accessed).
#       critical 2 Error message when the program has a permament problem (for example sending failed
#                 many times or wrong permissions to a queue).
#
# The numbers in this table are taken from GNU/Linux. Probably all operating systems use the same
# numbers. After version >= 3.1 a value can be defined as a word, like LOG_INFO, INFO or info.
loglevel = 2

logfile=/var/log/smstools/smsd.log

# Specifies the directory where smsd stores statistic files. The directoy must exist before you
# start smsd. If not given, then the program does not write statistic files. After version >= 3.1.1
# message counter files are stored to this directory even if smsd is compiled without statistics
# enabled.
stats = /var/log/smstools/smsd_stats

# Smsd writes statistics files every n seconds. Value "0" disables statistics but counters are
# still updated if stats directory is defined.
stats_interval = 3600

# Smsd does not write statistic files when no message was sent or received (Zero-Counters) if this
# is set to yes.
stats_no_zeroes = no

# Location of infofile and pidfile can be changed with these settings. This is usually necessary if
# the smsd is running as an unpriviledged user. If a sms3 script is used to start and stop the smsd,
# these settings should be defined in the script. These four settings can be overridden by the
# command line argument(s):
#
#       -ix set infofile to x
#       -px set pidfile to x
#       -ux set username to x
#       -gx set groupname to x
#
#infofile = /var/run/smstools/smsd.working
pidfile = /var/run/smsd.pid

# Smsd sleep so many seconds when it has nothing to do.
delaytime = 10

# Available after >= 3.1.4. If this value is not set, delaytime setting is used in the main process.
# With this setting outgoing messages can be checked more frequently than incoming messages.
delaytime_mainprocess = 15

# A modem sleeps so many seconds when it answers a command with ERROR.
errorsleeptime = 5

# A modem is not used so many seconds when it seems to be out of order.
blocktime = 3600

# Forces smsd to empty the first SIM card memory before sending SM. This is a workaround for modems
# that cannot send SM with a full SIM card.
receive_before_send = no

# Controls if and how the program splits large text messages. The program does not split text
# messages with UDH. If splitting is disabled, binary messages requiring more than one part are
# not sent.
#
#       0   disabled
#       1   enabled, no part-number
#       2   enabled, text numbers
#       3   enabled, concatenated format (not supported by some phones)
#
autosplit = 3

# Available from version >= 3.0. Controls when the incoming PDU string(s) is stored to message file.
#
#       0       no PDU's are stored
#       1       unsupported PDU's are stored
#       2       unsupported and PDU's with 8bit binary data or Unicode text are stored
#       3       all PDU's are stored
#
# Header is "PDU: " and PDU's of a multipart message are stored from 1 to n order.
store_received_pdu = 1

# Available from version >= 3.0.9. Controls when the outgoing PDU string(s) is stored to message file.
#
#       0   no PDU's are stored
#       1   failed (to send) PDU's are stored
#       2   failed and PDU's with 8bit binary data or Unicode text are stored
#       3   all PDU's are stored
#
# Header is "PDU: " and PDU's of a multipart message are stored from 1 to n order.
store_sent_pdu = 1

# Available from version >= 3.1.1. This setting defines if all executables are checked during the
# startup check. Usually eventhanler, alarmhandler etc. are shell scripts or some other single
# files which can be executed and therefore checked simply. If using a settings like
# eventhandler = /usr/local/bin/php -f /usr/local/bin/smsd_eventhandler.php, the check will fail
# and smsd will not start unless executable_check = no is defined.
executable_check = no

# External program that checks if a message file is valid. (This script can also be used to convert
# message file from UTF-8 to ISO format, which is internal format used in smsd. See
# scripts/checkhandler-utf-8 for sample code.) After version >= 3.0.9 the smsd converts messages
# automatically from UTF-8 to ISO, if it is necessary. If the checkhandler return a non-zero (other
# than 2) exitcode the message will not be sent. With the smsd version >= 3.1 the checkhandler can
# also modify a message file. Exitcode 2 means that the checkhandler has moved a message to the
# spooler by itself.
#checkhandler = /usr/local/bin/smscheck

# Specifies an external program or script that will execute whenever a message was sent, received
# or failed. (If your locale is UTF-8, you can use this script to convert received messages from
# smsd's internal format (ISO) to UTF-8. See scripts/eventhandler-utf-8 for code sample.) After
# version >= 3.0.9 there is incoming_utf8 = yes setting available. Using this setting the external
# conversion is not required.
#eventhandler = /opt/skrypty/lte-modem/lte

# Available from version >= 3.1.7. This setting defines an eventhandler to use with USSD messages.
# It is possible to use the same script or program which is used as eventhandler, but it's not a
# default because basically those scripts are not compatible without modifications. After an USSD
# message is received, and probably ussd_convert is done, eventhandler_ussd is called. Smsd checks
# what is the current character set of a modem and creates a temporary file which contains the USSD
# answer. Arguments for the eventhandler_ussd are:
#
#       $1   "USSD" keyword.
#       $2   Filename (which contains the answer).
#       $3   Devicename.
#       $4   Character set.
#       $5   Command what was used to get the USSD answer.
#
# Eventhandler_ussd can do whatever is needed with the USSD answer. It can also modify the answer,
# or delete the file. After eventhandler_ussd returns, smsd will check if the file still exists.
# If it exists, it's first line is taken as a new answer. Modified answer is then logged and
# probably printed to the regular_run_statfile.
#eventhandler_ussd = /opt/skrypty/lte-modem/ussd

# You can specify here an external program that is started whenever an alarm occurs. After
# version >= 3.1 a value can be defined as a word, like LOG_INFO, INFO or info.
alarmhandler = /home/socks/pool_alarm.pl

# Specifies what levels start an alarmhandler. You can use value between 2 and 7.
alarmlevel = 7

# Available from version >= 3.0. See http://smstools3.kekekasvi.com/index.php?p=fileformat for
# details of possible values.
#validity = 255

# Available from version >= 3.0. Controls when the incoming Unicode text is decoded internally.
#decode_unicode_text = no

# Available from version >= 3.0. Controls when the incoming multipart message is combined
# internally.
#internal_combine = no

blocktime = 10

[queues]
Port1 = /var/spool/sms/Port1
Port2 = /var/spool/sms/Port2
Port3 = /var/spool/sms/Port3
Port4 = /var/spool/sms/Port4
Port5 = /var/spool/sms/Port5
Port6 = /var/spool/sms/Port6
Port7 = /var/spool/sms/Port7
Port8 = /var/spool/sms/Port8


[Port1]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB0
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
#pin = 0000
#pinsleeptime = 2
queues = Port1
[Port2]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB1
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
#pin = 0000
#pinsleeptime = 2
queues = Port2
[Port3]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB2
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
#pin = 0000
#pinsleeptime = 2
queues = Port3
[Port4]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB3
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
#secondary_memory = TA
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
select_pdu_mode = no
queues = Port4
[Port5]
#init = AT+CMEE=1
pre_init = yes
device = /dev/ttyXRUSB4
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
queues = Port5
[Port6]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB5
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
queues = Port6
[Port7]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB6
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
queues = Port7
[Port8]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB7
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
queues = Port8


#unpooled ports
[Port9]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB8
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port9]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB8
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port10]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB9
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port11]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB10
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port12]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB11
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port13]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB12
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port14]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB13
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port15]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB14
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no
[Port16]
#init = AT+CMEE=1
pre_init = no
device = /dev/ttyXRUSB15
init = AT+CPMS="SM"
incoming = yes
mode = new
baudrate = 115200
rtscts = yes
cs_convert = yes
report = yes
memory_start = 1
check_memory_method = 1
primary_memory = SM
pin = ignore
check_sim = yes
check_sim_cmd = AT+CUSD=1,"*123#",15
check_sim_reset = AT+CFUN=1,1
check_sim_retries = forever
check_sim_wait = 2
device_open_retries = -1
#give_up_on_io_error = no
eventhandler = /home/socks/pool_forward_sms.pl
ignore_unexpected_input = +CME ERROR: 10
detect_unexpected_input = no

